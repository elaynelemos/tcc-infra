---
- hosts: gector-api-server
  become: yes
  vars_files:
    - vars/main.yml

  handlers:
    - name: restart cron
      ansible.builtin.service:
        name: cron
        state: restarted

    - name: restart gector-api
      ansible.builtin.service:
        name: gector-api
        enabled: true
        state: restarted

    - name: restart nginx
      ansible.builtin.service:
        name: nginx
        state: restarted

  pre_tasks:
    - name: add python repository from PPA
      ansible.builtin.apt_repository:
        repo: ppa:deadsnakes/ppa
        state: present

    - name: Set timezone to America/Recife
      community.general.timezone:
        name: America/Recife
      notify: restart cron

    - name: install apt dependencies
      ansible.builtin.apt:
        pkg: '{{ apt_pkgs }}'
        cache_valid_time: 3600
        update_cache: true

    - name: upgrade python dependencies
      ansible.builtin.pip:
        virtualenv_python: python3.7
        name:
          - pip
          - setuptools
          - wheel
        extra_args: --upgrade

  roles:
    - name: cloudalchemy.node_exporter

    - name: oefenweb.swapfile
      vars:
        swapfile_size: 4G
        swapfile_swappiness: 10
        swapfile_vfs_cache_pressure: 50

  tasks:
    - name: clone gector-api
      ansible.builtin.git:
        repo: https://github.com/elaynelemos/gector-api.git
        dest: &app_dir /var/www/gector-api
        separate_git_dir: /srv/gector-api.git
        version: master
        update: yes
        single_branch: yes

    - name: append user to www-data group
      ansible.builtin.user:
        name: '{{ ansible_user }}'
        groups: &app_user www-data
        append: yes

    - name: create python virtual environment
      command:
        cmd: python3.7 -m venv /var/www/gector-api/.venv
        creates: /var/www/gector-api/.venv

    - name: install python dependencies at the virtualenv
      ansible.builtin.pip:
        requirements: requirements.txt
        chdir: *app_dir
        virtualenv: .venv
        virtualenv_command: python3.7 -m venv

    - name: download bert model
      ansible.builtin.get_url:
        url: https://grammarly-nlp-data-public.s3.amazonaws.com/gector/xlnet_0_gectorv2.th
        dest: &tmp_model_file /tmp/xlnet_0_gectorv2.th

    - name: ensures models directory exists
      ansible.builtin.file:
        path: /var/www/gector-api/models
        state: directory
        recurse: yes

    - name: copy model file
      ansible.builtin.copy:
        src: *tmp_model_file
        dest: /var/www/gector-api/models/xlnet_0_gectorv2.th
        remote_src: yes

    - name: remove temporary model file
      ansible.builtin.file:
        path: *tmp_model_file
        state: absent

    - name: ensures application user permissions
      ansible.builtin.file:
        path: *app_dir
        state: directory
        recurse: yes
        owner: *app_user
        group: *app_user

    - name: copy nginx config
      ansible.builtin.copy:
        src: files/conf/gector-api.conf
        dest: /etc/nginx/sites-available/default
      notify: restart nginx

    - name: copy service config
      ansible.builtin.copy:
        src: files/conf/gector-api.service
        dest: /etc/systemd/system/gector-api.service
      notify: restart gector-api

    - name: reload systemd daemons
      ansible.builtin.systemd:
        daemon_reload: true


  post_tasks:
    - name: check api availability
      ansible.builtin.uri:
        url: http://localhost/correct
        method: POST
        status_code: 200
        body_format: json
        body: '{"sentence": "Hello , world .\n"}'
      register: response
      until: response.status == 200
      retries: 10
      delay: 5
